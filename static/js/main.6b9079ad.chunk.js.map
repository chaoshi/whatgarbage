{"version":3,"sources":["labels.js","index.js"],"names":["labels","unlabeled","person","bicycle","car","motorcycle","airplane","bus","train","truck","boat","traffic light","fire hydrant","street sign","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","hat","backpack","umbrella","shoe","eye glasses","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","plate","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","couch","potted plant","bed","mirror","dining table","window","desk","toilet","door","tv","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","blender","book","clock","vase","scissors","teddy bear","hair drier","toothbrush","hair brush","banner","blanket","branch","bridge","building-other","bush","cabinet","cage","cardboard","carpet","ceiling-other","ceiling-tile","cloth","clothes","clouds","counter","cupboard","curtain","desk-stuff","dirt","door-stuff","fence","floor-marble","floor-other","floor-stone","floor-tile","floor-wood","flower","fog","food-other","fruit","furniture-other","grass","gravel","ground-other","hill","house","leaves","light","mat","metal","mirror-stuff","moss","mountain","mud","napkin","net","paper","pavement","pillow","plant-other","plastic","platform","playingfield","railing","railroad","river","road","rock","roof","rug","salad","sand","sea","shelf","sky-other","skyscraper","snow","solid-other","stairs","stone","straw","structural-other","table","tent","textile-other","towel","tree","vegetable","wall-brick","wall-concrete","wall-other","wall-panel","wall-stone","wall-tile","wall-wood","water-other","waterdrops","window-blind","window-other","wood","App","videoRef","React","createRef","canvasRef","detectFrame","video","model","detect","then","predictions","_this","renderPredictions","requestAnimationFrame","ctx","current","getContext","clearRect","canvas","width","height","font","textBaseline","forEach","prediction","x","bbox","y","label","class","strokeStyle","lineWidth","strokeRect","fillStyle","textWidth","measureText","textHeight","parseInt","fillRect","fillText","_this2","this","can","document","getElementById","resizeCanvas","style","innerWidth","setTimeout","innerHeight","onresize","navigator","mediaDevices","getUserMedia","webCamPromise","audio","facingMode","stream","srcObject","Promise","resolve","reject","onloadedmetadata","modelPromise","cocoSsd","all","values","catch","error","console","react_default","a","createElement","id","className","autoPlay","playsInline","muted","ref","Component","rootElement","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.6b9079ad.chunk.js","sourcesContent":["export const labels = {\r\n    \"unlabeled\": \"\",\r\n    \"person\": \"垃圾\",\r\n    \"bicycle\": \"\",\r\n    \"car\": \"\",\r\n    \"motorcycle\": \"\",\r\n    \"airplane\": \"\",\r\n    \"bus\": \"\",\r\n    \"train\": \"\",\r\n    \"truck\": \"\",\r\n    \"boat\": \"\",\r\n    \"traffic light\": \"\",\r\n    \"fire hydrant\": \"\",\r\n    \"street sign\": \"\",\r\n    \"stop sign\": \"\",\r\n    \"parking meter\": \"\",\r\n    \"bench\": \"\",\r\n    \"bird\": \"\",\r\n    \"cat\": \"\",\r\n    \"dog\": \"\",\r\n    \"horse\": \"\",\r\n    \"sheep\": \"\",\r\n    \"cow\": \"\",\r\n    \"elephant\": \"\",\r\n    \"bear\": \"\",\r\n    \"zebra\": \"\",\r\n    \"giraffe\": \"\",\r\n    \"hat\": \"\",\r\n    \"backpack\": \"\",\r\n    \"umbrella\": \"\",\r\n    \"shoe\": \"\",\r\n    \"eye glasses\": \"\",\r\n    \"handbag\": \"\",\r\n    \"tie\": \"\",\r\n    \"suitcase\": \"\",\r\n    \"frisbee\": \"\",\r\n    \"skis\": \"\",\r\n    \"snowboard\": \"\",\r\n    \"sports ball\": \"\",\r\n    \"kite\": \"\",\r\n    \"baseball bat\": \"\",\r\n    \"baseball glove\": \"\",\r\n    \"skateboard\": \"\",\r\n    \"surfboard\": \"\",\r\n    \"tennis racket\": \"\",\r\n    \"bottle\": \"\",\r\n    \"plate\": \"\",\r\n    \"wine glass\": \"\",\r\n    \"cup\": \"\",\r\n    \"fork\": \"\",\r\n    \"knife\": \"\",\r\n    \"spoon\": \"\",\r\n    \"bowl\": \"\",\r\n    \"banana\": \"\",\r\n    \"apple\": \"\",\r\n    \"sandwich\": \"\",\r\n    \"orange\": \"\",\r\n    \"broccoli\": \"\",\r\n    \"carrot\": \"\",\r\n    \"hot dog\": \"\",\r\n    \"pizza\": \"\",\r\n    \"donut\": \"\",\r\n    \"cake\": \"\",\r\n    \"chair\": \"\",\r\n    \"couch\": \"\",\r\n    \"potted plant\": \"\",\r\n    \"bed\": \"\",\r\n    \"mirror\": \"\",\r\n    \"dining table\": \"\",\r\n    \"window\": \"\",\r\n    \"desk\": \"\",\r\n    \"toilet\": \"\",\r\n    \"door\": \"\",\r\n    \"tv\": \"有害垃圾\",\r\n    \"laptop\": \"有害垃圾\",\r\n    \"mouse\": \"\",\r\n    \"remote\": \"\",\r\n    \"keyboard\": \"\",\r\n    \"cell phone\": \"\",\r\n    \"microwave\": \"\",\r\n    \"oven\": \"\",\r\n    \"toaster\": \"\",\r\n    \"sink\": \"\",\r\n    \"refrigerator\": \"\",\r\n    \"blender\": \"\",\r\n    \"book\": \"\",\r\n    \"clock\": \"\",\r\n    \"vase\": \"\",\r\n    \"scissors\": \"\",\r\n    \"teddy bear\": \"\",\r\n    \"hair drier\": \"\",\r\n    \"toothbrush\": \"\",\r\n    \"hair brush\": \"\",\r\n    \"banner\": \"\",\r\n    \"blanket\": \"\",\r\n    \"branch\": \"\",\r\n    \"bridge\": \"\",\r\n    \"building-other\": \"\",\r\n    \"bush\": \"\",\r\n    \"cabinet\": \"\",\r\n    \"cage\": \"\",\r\n    \"cardboard\": \"\",\r\n    \"carpet\": \"\",\r\n    \"ceiling-other\": \"\",\r\n    \"ceiling-tile\": \"\",\r\n    \"cloth\": \"\",\r\n    \"clothes\": \"\",\r\n    \"clouds\": \"\",\r\n    \"counter\": \"\",\r\n    \"cupboard\": \"\",\r\n    \"curtain\": \"\",\r\n    \"desk-stuff\": \"\",\r\n    \"dirt\": \"\",\r\n    \"door-stuff\": \"\",\r\n    \"fence\": \"\",\r\n    \"floor-marble\": \"\",\r\n    \"floor-other\": \"\",\r\n    \"floor-stone\": \"\",\r\n    \"floor-tile\": \"\",\r\n    \"floor-wood\": \"\",\r\n    \"flower\": \"\",\r\n    \"fog\": \"\",\r\n    \"food-other\": \"\",\r\n    \"fruit\": \"\",\r\n    \"furniture-other\": \"\",\r\n    \"grass\": \"\",\r\n    \"gravel\": \"\",\r\n    \"ground-other\": \"\",\r\n    \"hill\": \"\",\r\n    \"house\": \"\",\r\n    \"leaves\": \"\",\r\n    \"light\": \"\",\r\n    \"mat\": \"\",\r\n    \"metal\": \"\",\r\n    \"mirror-stuff\": \"\",\r\n    \"moss\": \"\",\r\n    \"mountain\": \"\",\r\n    \"mud\": \"\",\r\n    \"napkin\": \"\",\r\n    \"net\": \"\",\r\n    \"paper\": \"\",\r\n    \"pavement\": \"\",\r\n    \"pillow\": \"\",\r\n    \"plant-other\": \"\",\r\n    \"plastic\": \"\",\r\n    \"platform\": \"\",\r\n    \"playingfield\": \"\",\r\n    \"railing\": \"\",\r\n    \"railroad\": \"\",\r\n    \"river\": \"\",\r\n    \"road\": \"\",\r\n    \"rock\": \"\",\r\n    \"roof\": \"\",\r\n    \"rug\": \"\",\r\n    \"salad\": \"\",\r\n    \"sand\": \"\",\r\n    \"sea\": \"\",\r\n    \"shelf\": \"\",\r\n    \"sky-other\": \"\",\r\n    \"skyscraper\": \"\",\r\n    \"snow\": \"\",\r\n    \"solid-other\": \"\",\r\n    \"stairs\": \"\",\r\n    \"stone\": \"\",\r\n    \"straw\": \"\",\r\n    \"structural-other\": \"\",\r\n    \"table\": \"\",\r\n    \"tent\": \"\",\r\n    \"textile-other\": \"\",\r\n    \"towel\": \"\",\r\n    \"tree\": \"\",\r\n    \"vegetable\": \"\",\r\n    \"wall-brick\": \"\",\r\n    \"wall-concrete\": \"\",\r\n    \"wall-other\": \"\",\r\n    \"wall-panel\": \"\",\r\n    \"wall-stone\": \"\",\r\n    \"wall-tile\": \"\",\r\n    \"wall-wood\": \"\",\r\n    \"water-other\": \"\",\r\n    \"waterdrops\": \"\",\r\n    \"window-blind\": \"\",\r\n    \"window-other\": \"\",\r\n    \"wood\": \"\"\r\n  };","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport * as cocoSsd from \"@tensorflow-models/coco-ssd\";\nimport \"@tensorflow/tfjs\";\nimport \"./styles.css\";\n\nimport { labels } from './labels.js'\n\nclass App extends React.Component {\n  videoRef = React.createRef();\n  canvasRef = React.createRef();\n\n  componentDidMount() {\n    var can = document.getElementById(\"my-canvas\");\n\n    function resizeCanvas() {\n      can.style.width = window.innerWidth + \"px\";\n      setTimeout(function() {\n        can.style.height = window.innerHeight + \"px\";\n      }, 0);\n    };\n    \n    // Webkit/Blink will fire this on load, but Gecko doesn't.\n    window.onresize = resizeCanvas;\n    \n    // So we fire it manually...\n    resizeCanvas();\n\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      const webCamPromise = navigator.mediaDevices\n        .getUserMedia({\n          audio: false,\n          video: {\n            facingMode: \"environment\"\n          }\n        })\n        .then(stream => {\n          window.stream = stream;\n          this.videoRef.current.srcObject = stream;\n          return new Promise((resolve, reject) => {\n            this.videoRef.current.onloadedmetadata = () => {\n              resolve();\n            };\n          });\n        });\n      const modelPromise = cocoSsd.load();\n      Promise.all([modelPromise, webCamPromise])\n        .then(values => {\n          this.detectFrame(this.videoRef.current, values[0]);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  }\n\n  detectFrame = (video, model) => {\n    model.detect(video).then(predictions => {\n      this.renderPredictions(predictions);\n      requestAnimationFrame(() => {\n        this.detectFrame(video, model);\n      });\n    });\n  };\n\n  renderPredictions = predictions => {\n    const ctx = this.canvasRef.current.getContext(\"2d\");\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    // Font options.\n    const font = \"16px sans-serif\";\n    ctx.font = font;\n    ctx.textBaseline = \"top\";\n    predictions.forEach(prediction => {\n      const x = prediction.bbox[0];\n      const y = prediction.bbox[1];\n      const width = prediction.bbox[2];\n      const height = prediction.bbox[3];\n      const label = prediction.class+': '+labels[prediction.class];\n      // Draw the bounding box.\n      ctx.strokeStyle = \"#00FFFF\";\n      ctx.lineWidth = 4;\n      ctx.strokeRect(x, y, width, height);\n      // Draw the label background.\n      ctx.fillStyle = \"#00FFFF\";\n      const textWidth = ctx.measureText(label).width;\n      const textHeight = parseInt(font, 10); // base 10\n      ctx.fillRect(x, y, textWidth + 4, textHeight + 4);\n    });\n\n    predictions.forEach(prediction => {\n      const x = prediction.bbox[0];\n      const y = prediction.bbox[1];\n      const label = prediction.class+': '+labels[prediction.class];\n      // Draw the text last to ensure it's on top.\n      ctx.fillStyle = \"#000000\";\n      ctx.fillText(label, x, y);\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <video\n          id=\"my-video\"\n          className=\"size\"\n          autoPlay\n          playsInline\n          muted\n          ref={this.videoRef}\n          // width=\"350\"\n          // height=\"700\"\n        />\n        <canvas\n          id=\"my-canvas\"\n          className=\"size\"\n          ref={this.canvasRef}\n          // width=\"350\"\n          // height=\"700\"\n        />\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}